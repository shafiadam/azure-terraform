name: Terraform CI

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.9.8

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step to set Terraform Variable Environment Variables
      - name: Set Terraform Variable Environment Variables
        run: |
          echo "Setting Terraform environment variables for Azure credentials"

          # Set each variable using the TF_VAR_ prefix to match the variables in your Terraform code
          echo "TF_VAR_client_id=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "TF_VAR_client_secret=${{ secrets.AZURE_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "TF_VAR_tenant_id=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
          echo "TF_VAR_subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV

      # Step to check for required environment variables
      - name: Check Required Environment Variables
        run: |
          if [ -z "$TF_VAR_client_id" ] || [ -z "$TF_VAR_client_secret" ] || [ -z "$TF_VAR_tenant_id" ] || [ -z "$TF_VAR_subscription_id" ]; then
            echo "One or more required environment variables are missing."
            exit 1
          fi
          echo "All required environment variables are set."

      - name: Initialize Terraform
        run: |
          terraform init -input=false
          echo "Terraform initialization completed successfully."
        working-directory: ./Hub

      - name: Validate Terraform
        run: |
          terraform validate
          echo "Terraform validation completed successfully."
        working-directory: ./Hub

      # Increase logging level and set a timeout for the Plan step
      - name: Plan Terraform
        timeout-minutes: 15  # Timeout to prevent indefinite hanging
        env:
          TF_LOG: DEBUG  # Enable detailed logging
        run: |
          terraform plan -out=tfplan
          echo "Terraform plan created successfully."
        working-directory: ./Hub

      - name: Apply Terraform
        if: success()
        run: |
          terraform apply -auto-approve tfplan
          echo "Terraform apply completed successfully."
        working-directory: ./Hub
